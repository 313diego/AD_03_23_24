/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package acciones;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.SQLIntegrityConstraintViolationException;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author diego
 */
public class Aplicacion extends javax.swing.JFrame {

    String tabClientes = "CLIENTES";
    String tabPedidos = "PEDIDOS";
    String tabProductos = "PRODUCTOS";
    String sentSQL = "";
    String salida = "";
    int columnas;

    Connection coon = null;
    Statement stmt;
    ResultSet rs;
    PreparedStatement ps = null;

    public Aplicacion() {
        initComponents();
        jButtonInsertar.setEnabled(false);
        jButtonRecuperar.setEnabled(false);
        jButtonRecClientes.setEnabled(false);
        jButtonRecPedidos.setEnabled(false);
        jButtonRecProductos.setEnabled(false);
        jButtonContinuar.setEnabled(false);
        jButtonActClientes.setEnabled(false);
        jButtonActPedidos.setEnabled(false);
        jButtonActProductos.setEnabled(false);
        jButtonPedidosCli1.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelPrincipal = new javax.swing.JPanel();
        jLabelTitulo = new javax.swing.JLabel();
        jButtonCrear = new javax.swing.JButton();
        jButtonInsertar = new javax.swing.JButton();
        jButtonRecuperar = new javax.swing.JButton();
        jButtonRecClientes = new javax.swing.JButton();
        jButtonRecProductos = new javax.swing.JButton();
        jButtonRecPedidos = new javax.swing.JButton();
        jButtonContinuar = new javax.swing.JButton();
        jButtonActProductos = new javax.swing.JButton();
        jButtonActPedidos = new javax.swing.JButton();
        jButtonActClientes = new javax.swing.JButton();
        jButtonPedidosCli1 = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jTextFieldInfo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPanelPrincipal = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelTitulo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelTitulo.setText("Opciones de la aplicacion:");

        jButtonCrear.setText("Crear 3 tablas (clientes, pedidos y productos)");
        jButtonCrear.setToolTipText("");
        jButtonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearActionPerformed(evt);
            }
        });

        jButtonInsertar.setText("Insertar en las tres tablas");
        jButtonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertarActionPerformed(evt);
            }
        });

        jButtonRecuperar.setText("Recuperar datos");
        jButtonRecuperar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRecuperarActionPerformed(evt);
            }
        });

        jButtonRecClientes.setText("Clientes");
        jButtonRecClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRecClientesActionPerformed(evt);
            }
        });

        jButtonRecProductos.setText("Productos");
        jButtonRecProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRecProductosActionPerformed(evt);
            }
        });

        jButtonRecPedidos.setText("Pedidos");
        jButtonRecPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRecPedidosActionPerformed(evt);
            }
        });

        jButtonContinuar.setText("Continuar");
        jButtonContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonContinuarActionPerformed(evt);
            }
        });

        jButtonActProductos.setText("Actualizar datos de los productos");
        jButtonActProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActProductosActionPerformed(evt);
            }
        });

        jButtonActPedidos.setText("Actualizar pedidos (sentencias preparadas)");
        jButtonActPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActPedidosActionPerformed(evt);
            }
        });

        jButtonActClientes.setText("Actualizar clientes (sentencias preparadas)");
        jButtonActClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActClientesActionPerformed(evt);
            }
        });

        jButtonPedidosCli1.setText("Pedidos con el fabricante NÂº 1");
        jButtonPedidosCli1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPedidosCli1ActionPerformed(evt);
            }
        });

        jButtonSalir.setText("SALIR");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jTextPanelPrincipal);

        javax.swing.GroupLayout jPanelPrincipalLayout = new javax.swing.GroupLayout(jPanelPrincipal);
        jPanelPrincipal.setLayout(jPanelPrincipalLayout);
        jPanelPrincipalLayout.setHorizontalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addGap(244, 244, 244)
                .addComponent(jButtonSalir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPrincipalLayout.createSequentialGroup()
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextFieldInfo))
                    .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                        .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jButtonContinuar, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButtonPedidosCli1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonActClientes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonActPedidos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelTitulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPrincipalLayout.createSequentialGroup()
                                        .addComponent(jButtonRecClientes)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonRecProductos)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonRecPedidos))
                                    .addComponent(jButtonRecuperar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonInsertar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonCrear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonActProductos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)))
                .addGap(21, 21, 21))
        );
        jPanelPrincipalLayout.setVerticalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                        .addComponent(jButtonCrear)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonInsertar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonRecuperar)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonRecClientes)
                            .addComponent(jButtonRecProductos)
                            .addComponent(jButtonRecPedidos))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonContinuar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonActProductos)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonActPedidos)
                        .addGap(20, 20, 20)
                        .addComponent(jButtonActClientes)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPedidosCli1))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addComponent(jTextFieldInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonSalir)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearActionPerformed
        try {
            coon = new ConexionBBDD().getConexion();
            PreparedStatement ps;
            if (!tabExist(tabClientes)) {
                sentSQL = "CREATE TABLE CLIENTES(NUM_CLI INTEGER NOT NULL PRIMARY KEY, NOMBRE VARCHAR(30), LIMITE_CREDITO DECIMAL(10,2))";
                ps = coon.prepareStatement(sentSQL);
                ps.execute();
                sentSQL = "CREATE TABLE PEDIDOS(COD_PEDIDO INTEGER NOT NULL PRIMARY KEY, NUM_PEDIDO INTEGER, FECHA_PEDIDO DATE, CLIENTE INTEGER, FABRI INTEGER, PRODUCTO INTEGER, CANT INTEGER, IMPORTE DECIMAL(10,2))";
                ps = coon.prepareStatement(sentSQL);
                ps.execute();
                sentSQL = "CREATE TABLE PRODUCTOS(ID_PRODUCTO INTEGER NOT NULL PRIMARY KEY, ID_FAB INTEGER, DESCRIPCION VARCHAR(20), PRECIO DECIMAL(10,2), EXISTENCIAS INTEGER)";
                ps = coon.prepareStatement(sentSQL);
                ps.execute();
                jTextFieldInfo.setText("Las tablas han sido creadas");
            } else {
                jTextFieldInfo.setText("Las tablas ya existen");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Aplicacion.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            if (coon != null) {
                try {
                    coon.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Aplicacion.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        jButtonCrear.setEnabled(false);
        jButtonInsertar.setEnabled(true);
    }//GEN-LAST:event_jButtonCrearActionPerformed

    private void jButtonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertarActionPerformed
        try {
            try {
                coon = new ConexionBBDD().getConexion();
                stmt = coon.createStatement();
                if (tabExist(tabClientes)) {
                    sentSQL = "INSERT INTO CLIENTES VALUES (2101,'LUIS GARCIA',3000)";
                    stmt.executeUpdate(sentSQL);
                    sentSQL = "INSERT INTO CLIENTES VALUES (2102,'ANGEL LUIS GARCIA',5000)";
                    stmt.executeUpdate(sentSQL);
                    sentSQL = "INSERT INTO CLIENTES VALUES (2103,'MARIA MARIT',3500)";
                    stmt.executeUpdate(sentSQL);
                    sentSQL = "INSERT INTO CLIENTES VALUES (2104,'EVA LOPEZ',3000)";
                    stmt.executeUpdate(sentSQL);
                    jTextFieldInfo.setText("Los registros se han insertdo correctamente en la tabla clientes");
                } else {
                    jTextFieldInfo.setText("Los datos ya existen en la tabla");
                }
            } catch (SQLIntegrityConstraintViolationException ex) {
                ex.printStackTrace();
                jTextFieldInfo.setText("Error al insertar datos en la tabla clientes");
            }

            try {
                stmt = coon.createStatement();
                if (tabExist(tabPedidos)) {
                    sentSQL = "INSERT INTO PEDIDOS VALUES (1,0001,#01/01/2012#,2101,1,001,20,0)";
                    stmt.executeUpdate(sentSQL);
                    sentSQL = "INSERT INTO PEDIDOS VALUES (2,0002,#01/01/2012#,2102,1,002,2,110.00)";
                    stmt.executeUpdate(sentSQL);
                    sentSQL = "INSERT INTO PEDIDOS VALUES (3,0003,#02/01/2012#,2102,2,002,200.00,NULL)";
                    stmt.executeUpdate(sentSQL);
                    sentSQL = "INSERT INTO PEDIDOS VALUES (4,0004,#02/01/2012#,2101,1,002,50,NULL)";
                    stmt.executeUpdate(sentSQL);
                    jTextFieldInfo.setText("Los registros se han insertdo correctamente en la tabla pedidos");
                } else {
                    jTextFieldInfo.setText("Los datos ya existen en la tabla");
                }
            } catch (SQLIntegrityConstraintViolationException ex) {
                ex.printStackTrace();
                jTextFieldInfo.setText("Error al insertar datos en la tabla pedidos");
            }

            try {
                stmt = coon.createStatement();
                if (tabExist(tabProductos)) {
                    sentSQL = "INSERT INTO PRODUCTOS VALUES (001,1,'ARANDELA',0.58,100)";
                    stmt.executeUpdate(sentSQL);
                    sentSQL = "INSERT INTO PRODUCTOS VALUES (002,1,'BISAGRA',1.58,10)";
                    stmt.executeUpdate(sentSQL);
                    sentSQL = "INSERT INTO PRODUCTOS VALUES (003,1,'JUNTA',0.58,1)";
                    stmt.executeUpdate(sentSQL);
                    sentSQL = "INSERT INTO PRODUCTOS VALUES (004,2,'RODAMIENTO',0.58,25)";
                    stmt.executeUpdate(sentSQL);
                    jTextFieldInfo.setText("Los registros se han insertado correctamente en la tabla productos");
                } else {
                    jTextFieldInfo.setText("Los datos ya existen en la tabla");
                }
            } catch (SQLIntegrityConstraintViolationException ex) {
                ex.printStackTrace();
                jTextFieldInfo.setText("Error al insertar datos en la tabla productos");
            }

        } catch (SQLException e) {
            e.getMessage();
            jTextFieldInfo.setText("Las tablas ya contienen los datos que intenta introducir");
        } finally {
            try {
                coon.close();
                stmt.close();
            } catch (SQLException ex) {
                Logger.getLogger(Aplicacion.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        jButtonInsertar.setEnabled(false);
        jButtonRecuperar.setEnabled(true);
    }//GEN-LAST:event_jButtonInsertarActionPerformed

    private void jButtonRecuperarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRecuperarActionPerformed
        jButtonRecuperar.setEnabled(false);
        jButtonRecClientes.setEnabled(true);
        jButtonRecPedidos.setEnabled(true);
        jButtonRecProductos.setEnabled(true);
        jButtonContinuar.setEnabled(true);
        jTextFieldInfo.setText("Seleciona la tabla de la cual quieres recuperar datos");
    }//GEN-LAST:event_jButtonRecuperarActionPerformed

    private void jButtonRecClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRecClientesActionPerformed
        jTextPanelPrincipal.setText("");
        salida = "";
        recDatos(tabClientes);
        jTextPanelPrincipal.setText(salida);
        jTextFieldInfo.setText("Se han recuparado los datos de la tabla " + tabClientes);
    }//GEN-LAST:event_jButtonRecClientesActionPerformed

    private void jButtonRecProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRecProductosActionPerformed
        jTextPanelPrincipal.setText("");
        salida = "";
        recDatos(tabProductos);
        jTextPanelPrincipal.setText(salida);
        jTextFieldInfo.setText("Se han recuparado los datos de la tabla " + tabProductos);
    }//GEN-LAST:event_jButtonRecProductosActionPerformed

    private void jButtonRecPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRecPedidosActionPerformed
        jTextPanelPrincipal.setText("");
        salida = "";
        recDatos(tabPedidos);
        jTextPanelPrincipal.setText(salida);
        jTextFieldInfo.setText("Se han recuparado los datos de la tabla " + tabPedidos);
    }//GEN-LAST:event_jButtonRecPedidosActionPerformed

    private void jButtonContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonContinuarActionPerformed
        jButtonRecClientes.setEnabled(false);
        jButtonRecPedidos.setEnabled(false);
        jButtonRecProductos.setEnabled(false);
        jButtonContinuar.setEnabled(false);
        jButtonActProductos.setEnabled(true);
        jTextPanelPrincipal.setText("");
        jTextFieldInfo.setText("");
    }//GEN-LAST:event_jButtonContinuarActionPerformed

    private void jButtonActProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActProductosActionPerformed

        try {
            salida = "";
            coon = new ConexionBBDD().getConexion();
            stmt = coon.createStatement();
            sentSQL = "UPDATE PRODUCTOS SET PRECIO = 2 WHERE ID_PRODUCTO = 2";
            stmt.execute(sentSQL);
            rs = stmt.executeQuery("SELECT * FROM PRODUCTOS WHERE ID_PRODUCTO = 2");
            columnas = rs.getMetaData().getColumnCount();
            while (rs.next()) {
                for (int i = 1; i <= columnas; i++) {
                    if (i < columnas) {
                        salida += rs.getString(i) + " | ";
                    }
                }
            }
            jTextPanelPrincipal.setText(salida);
            jTextFieldInfo.setText("Se ha actualizado el precio del producto con id 002");
            jButtonActProductos.setEnabled(false);
            jButtonActPedidos.setEnabled(true);
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                coon.close();
                stmt.close();
                rs.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButtonActProductosActionPerformed

    private void jButtonActPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActPedidosActionPerformed
        try {
            salida = "";
            jTextFieldInfo.setText("");
            jTextPanelPrincipal.setText("");
            coon = new ConexionBBDD().getConexion();
            sentSQL = "UPDATE PEDIDOS SET IMPORTE = 200 WHERE NUM_PEDIDO = 3";
            ps = null;
            ps = coon.prepareStatement(sentSQL);
            ps.executeUpdate();
            stmt = coon.createStatement();
            rs = stmt.executeQuery("SELECT * FROM PEDIDOS WHERE cod_pedido = 3");
            columnas = rs.getMetaData().getColumnCount();
            while (rs.next()) {
                for (int i = 1; i <= columnas; i++) {
                    if (i < columnas) {
                        if (rs.getMetaData().getColumnName(i).equals("FECHA_PEDIDO")) {
                            Date fecha = rs.getDate(i);
                            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
                            salida += formatoFecha.format(fecha) + " | ";
                        } else {
                            salida += rs.getString(i) + " | ";
                        }
                    }
                }
            }
            jTextPanelPrincipal.setText(salida);
            jTextFieldInfo.setText("Se ha actualizado al valor 200 el precio del pedido con codigo de pedido 3");
            jButtonActPedidos.setEnabled(false);
            jButtonActClientes.setEnabled(true);

        } catch (SQLException ex) {
            Logger.getLogger(Aplicacion.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                coon.close();
                stmt.close();
                ps.close();
                rs.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_jButtonActPedidosActionPerformed

    private void jButtonActClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActClientesActionPerformed
        try {
            jTextPanelPrincipal.setText("");
            salida = "";
            coon = new ConexionBBDD().getConexion();
            sentSQL = "UPDATE CLIENTES SET NOMBRE = 'CHARO HOLGADO', LIMITE_CREDITO = 1000 WHERE NUM_CLI = 2101";
            ps = coon.prepareStatement(sentSQL);
            ps.execute();
            stmt = coon.createStatement();
            rs = stmt.executeQuery("SELECT * FROM CLIENTES WHERE NUM_CLI = 2101");
            columnas = rs.getMetaData().getColumnCount();
            while (rs.next()) {
                for (int i = 1; i <= columnas; i++) {
                    if (i < columnas) {
                        salida += rs.getString(i) + " | ";
                    }
                }
            }
            jTextPanelPrincipal.setText(salida);
            jTextFieldInfo.setText("Se ha actualizado el nombre a CHARO HOLGADO y el limite de credito a 1000 del cliente 2101");
            jButtonActClientes.setEnabled(false);
            jButtonPedidosCli1.setEnabled(true);
        } catch (SQLException ex) {
            ex.printStackTrace();
        } finally {
            try {
                coon.close();
                ps.close();
                stmt.close();
                rs.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_jButtonActClientesActionPerformed

    private void jButtonPedidosCli1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPedidosCli1ActionPerformed
        try {
            jTextPanelPrincipal.setText("");
            salida = "";
            sentSQL = "";
            coon = new ConexionBBDD().getConexion();
            stmt = coon.createStatement();
            sentSQL = "SELECT * FROM PRODUCTOS WHERE ID_FAB = 1";
            rs = stmt.executeQuery(sentSQL);
            columnas = rs.getMetaData().getColumnCount();
            salida += "Productos del fabricante 1:" + "\n";
            while (rs.next()) {
                for (int i = 1; i <= columnas; i++) {
                    if (i < columnas) {
                        salida += rs.getString(i) + " | ";
                    } else {
                        salida += rs.getString(i) + "\n";
                    }
                }
            }
            salida += "-----------------------------" + "\n";
            salida += "Pedidos de productos del fabricante 1" + "\n";
            sentSQL = "";
            sentSQL = "SELECT PEDIDOS.COD_PEDIDO, PEDIDOS.NUM_PEDIDO, CLIENTES.NOMBRE, PRODUCTOS.DESCRIPCION, PEDIDOS.CANT "
                    + "FROM PEDIDOS "
                    + "JOIN CLIENTES ON PEDIDOS.CLIENTE = CLIENTES.NUM_CLI "
                    + "JOIN PRODUCTOS ON PEDIDOS.PRODUCTO = PRODUCTOS.ID_PRODUCTO "
                    + "WHERE PEDIDOS.FABRI = 1";
            rs = stmt.executeQuery(sentSQL);
            columnas = rs.getMetaData().getColumnCount();
            while (rs.next()) {
                for (int i = 1; i <= columnas; i++) {
                    if (i < columnas) {
                        salida += rs.getString(i) + " | ";
                    } else {
                        salida += rs.getString(i) + "\n";
                    }
                }
            }

            jTextPanelPrincipal.setText(salida);
            jTextFieldInfo.setText("Mostrando los productos del fabricante 1 y los pedidos de sus productos");

        } catch (SQLException ex) {
            ex.printStackTrace();
        } finally {
            try {
                stmt.close();
                coon.close();
                rs.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButtonPedidosCli1ActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        try {
            coon.close();
        } catch (SQLException ex) {
            Logger.getLogger(Aplicacion.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            System.exit(0);
        }
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private boolean tabExist(String nomTabla) throws SQLException {

        DatabaseMetaData dmt = coon.getMetaData();
        ResultSet rs = dmt.getTables(null, null, nomTabla, null);
        return rs.next();
    }

    private void recDatos(String nombre) {
        try {
            coon = new ConexionBBDD().getConexion();
            stmt = coon.createStatement();
            sentSQL = "SELECT * FROM " + nombre;
            rs = stmt.executeQuery(sentSQL);
            columnas = rs.getMetaData().getColumnCount();
            while (rs.next()) {
                for (int i = 1; i <= columnas; i++) {
                    if (i < columnas) {
                        if (rs.getMetaData().getColumnName(i).equals("FECHA_PEDIDO")) {
                            Date fecha = rs.getDate(i);
                            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
                            salida += formatoFecha.format(fecha) + " | ";
                        } else {
                            salida += rs.getString(i) + " | ";
                        }
                    } else {
                        salida += rs.getString(i) + "\n";
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Aplicacion.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                coon.close();
                stmt.close();
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(Aplicacion.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Aplicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Aplicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Aplicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Aplicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Aplicacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActClientes;
    private javax.swing.JButton jButtonActPedidos;
    private javax.swing.JButton jButtonActProductos;
    private javax.swing.JButton jButtonContinuar;
    private javax.swing.JButton jButtonCrear;
    private javax.swing.JButton jButtonInsertar;
    private javax.swing.JButton jButtonPedidosCli1;
    private javax.swing.JButton jButtonRecClientes;
    private javax.swing.JButton jButtonRecPedidos;
    private javax.swing.JButton jButtonRecProductos;
    private javax.swing.JButton jButtonRecuperar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JPanel jPanelPrincipal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldInfo;
    private javax.swing.JTextPane jTextPanelPrincipal;
    // End of variables declaration//GEN-END:variables
}
